name: portalz-integrator-github-actions

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    name: Test and build project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

  docker:
    name: Build and Push image to registry
    env:
      IMAGE: portalz-registry-dev/portalz-integrator
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Prepare
        id: prep
        run: |
          BRANCH=${GITHUB_REF##*/}
          TS=$(date +%s)
          REVISION=${GITHUB_SHA::8}
          BUILD_ID="${BRANCH}-${REVISION}-${TS}"
          LATEST_ID=canary
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            BUILD_ID=${GITHUB_REF/refs\/tags\//}
            LATEST_ID=latest
          fi
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=BUILD_ID::${BUILD_ID}
          echo ::set-output name=LATEST_ID::${LATEST_ID}
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v4
        with:
          registry: ${{ secrets.REGISTRY_URI }}
          name: ${{ env.IMAGE }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          tags: |
            ${{ steps.prep.outputs.BUILD_ID }}

  deploy:
    name: Deploy on Kubernetes via SSH
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [ build-and-test, docker ]
    steps:
      - name: Deploy image to Kubernetes cluster via SSH
        uses: fifsky/ssh-action@master
        with:
          command: |
            kubectl delete deployment portalz-integrator
            kubectl create deployment portalz-integrator --image=rg.fr-par.scw.cloud/portalz-registry-dev/portalz-integrator:latest
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}