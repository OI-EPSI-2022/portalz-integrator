name: portalz-integrator-github-actions

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  APPLICATION_NAME: portalz-integrator

jobs:
  configure_aws_credentials:
    name: Configure AWS Credentials
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

  build_and_push:
    name: Build and push
    runs-on: ubuntu-latest
    needs: [ configure_aws_credentials ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.build-cache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=local,src=/tmp/.build-cache
          cache-to: type=local,dest=/tmp/.build-cache-new,mode=max
          tags: ${{ steps.login-ecr.outputs.registry }}/portalz-integrator:latest
          push: true

      - name: Move cache
        run: |
          rm -rf /tmp/.build-cache
          mv /tmp/.build-cache-new /tmp/.build-cache

  deploy:
    name: Deploy on Kubernetes via SSH
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [ build_and_push ]
    steps:
      - name: Set environment variables
        run: |
          echo "APPLICATION_NAME=$(echo $APPLICATION_NAME)" >> $GITHUB_ENV
          echo "Application name: $APPLICATION_NAME"
          echo "TAG=${GITHUB_REF##*/}-${GITHUB_SHA::8}" >> $GITHUB_ENV
          echo "Build: $TAG"
      - name: Deploy image to Kubernetes cluster via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          envs: APPLICATION_NAME,TAG
          script: |
            kubectl delete deployment $APPLICATION_NAME
            kubectl create deployment $APPLICATION_NAME --image=rg.fr-par.scw.cloud/portalz-registry-dev/$APPLICATION_NAME:$TAG